{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","panels/info.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","osname","Info","center","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.053d951e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  View,\n  Panel,\n  PanelHeader,\n  Header,\n  Group,\n  Cell,\n  Avatar,\n  Div,\n  Button,\n  Tappable,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>Меню</PanelHeader>\n    {fetchedUser && (\n      <Group title=\"User Data Fetched with VK Connect\">\n        <Cell\n          before={\n            fetchedUser.photo_200 ? (\n              <Avatar src={fetchedUser.photo_200} />\n            ) : null\n          }\n          description={\n            fetchedUser.city && fetchedUser.city.title\n              ? fetchedUser.city.title\n              : \"\"\n          }\n        >\n          {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n        </Cell>\n      </Group>\n    )}\n\n    <Group title=\"Navigation Example\">\n      <Div>\n        <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n          Такси\n        </Button>\n      </Div>\n      <Div>\n        <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"info\">\n          Меню\n        </Button>\n      </Div>\n    </Group>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string\n    })\n  })\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  View,\r\n  Panel,\r\n  PanelHeader,\r\n  Header,\r\n  Group,\r\n  Cell,\r\n  Avatar,\r\n  Div,\r\n  Button,\r\n  HeaderButton,\r\n  platform,\r\n  IOS,\r\n  Call,\r\n} from \"@vkontakte/vkui\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\n\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n\r\nconst osname = platform();\r\n\r\nconst Info = ({ id, go, fetchedUser }) => (\r\n  <Panel id={id}>\r\n    <PanelHeader left={<HeaderButton onClick={go} data-to=\"home\"> {osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>} \r\n    </HeaderButton>}>\r\n    </PanelHeader>\r\n    <Group title=\"Navigation Example\" center=\"\">\r\n      <Div>\r\n        <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\r\n          Такси\r\n        </Button>\r\n      </Div>\r\n      <Div>\r\n        <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"info\">\r\n          Меню\r\n        </Button>\r\n      </Div>\r\n    </Group>\r\n  </Panel>\r\n);\r\n\r\nInfo.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n    fetchedUser: PropTypes.shape({\r\n      photo_200: PropTypes.string,\r\n      first_name: PropTypes.string,\r\n      last_name: PropTypes.string,\r\n      city: PropTypes.shape({\r\n        title: PropTypes.string\r\n      })\r\n    })\r\n  };\r\nexport default Info;\r\n","import React, { useState, useEffect } from \"react\";\nimport connect from \"@vkontakte/vk-connect\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Persik\";\nimport Info from \"./panels/info\";\nimport Example from \"./panels/kakas\"\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await connect.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n      <Persik id=\"persik\" go={go} />\n      <Info id=\"info\" go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vk-connect\";\nimport App from \"./App\";\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send(\"VKWebAppInit\");\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}